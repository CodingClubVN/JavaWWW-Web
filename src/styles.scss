
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$CC-JavaWWW-Web-primary: mat.define-palette(mat.$indigo-palette);
$CC-JavaWWW-Web-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$CC-JavaWWW-Web-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$CC-JavaWWW-Web-theme: mat.define-light-theme((
  color: (
    primary: $CC-JavaWWW-Web-primary,
    accent: $CC-JavaWWW-Web-accent,
    warn: $CC-JavaWWW-Web-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($CC-JavaWWW-Web-theme);

/* You can add global styles to this file, and also import other style files */
@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");

/* Importing Bootstrap SCSS file. */
@import "~bootstrap/scss/bootstrap";

/* Importing Datepicker SCSS file. */
@import "node_modules/ngx-bootstrap/datepicker/bs-datepicker";

@import 'node_modules/ngx-owl-carousel-o/lib/styles/scss/owl.carousel';
@import 'node_modules/ngx-owl-carousel-o/lib/styles/scss/owl.theme.default';

@import '~ngx-toastr/toastr';

* {
  color: white !important;
  font-family: "Roboto";
}

html, body {
  overscroll-behavior-y: none;
  overscroll-behavior-x: none;
}

.cursor-pointer {
  cursor: pointer;
}

body .modal-dialog {
  margin-left: 0 !important;
  margin-top: 100px !important;
  max-width: 300px;
}

body .modal {
  max-width: 80%;
  margin: 0 10%;
}

body .modal-backdrop.show {
  opacity: 0.2 !important;
}

.global-width {
  max-width: 80%;
}

p {
  padding: 0 !important;
  margin: 0 !important;
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type="number"] {
  -moz-appearance: textfield;
}

.overflow-auto {
  overflow-y: scroll !important;
  padding-right: 18px;
  &::-webkit-scrollbar {
    width: 10px;
    background-color: transparent !important;
  }

  &::-webkit-scrollbar-thumb {
    background-color: gray;
    background-clip: padding-box;
  }

  &::-webkit-scrollbar-thumb:hover {
    background-color: gray;
  }
}

body {
  overflow-y: auto !important;
  &::-webkit-scrollbar {
    width: 10px;
    background-color: transparent !important;
  }

  &::-webkit-scrollbar-thumb {
    background-color: gray;
    background-clip: padding-box;
  }

  &::-webkit-scrollbar-thumb:hover {
    background-color: gray;
  }
}

modal-container {
  overflow-y: hidden !important;
}
.container-custom {
  width: 80%;
}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }


.invalid-feedback {
  color: #dc3545 !important;
}

.valid-feedback {
  color: #198754 !important;
}

.unset-color {
  color: unset;
}